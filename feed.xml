<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2024-09-05T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2024-0369: Vulnerability in phonenumber</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0369.html</id><updated>2024-09-05T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0369.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0369: Vulnerability in phonenumber"/><published>2024-09-05T12:00:00+00:00</published><summary xml:lang="en">phonenumber:  panic on parsing crafted phonenumber inputs</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/phonenumber/RUSTSEC-2024-0369.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/phonenumber/RUSTSEC-2024-0369.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0369&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0369
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;phonenumber:  panic on parsing crafted phonenumber inputs&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-07-07&quot;&gt;
          July  7, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-05&quot;&gt;
          September  5, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/phonenumber.html&quot;&gt;phonenumber&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/phonenumber&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/panic.html&quot;&gt;#panic&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/untrusted-input.html&quot;&gt;#untrusted-input&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/parsing.html&quot;&gt;#parsing&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697&quot;&gt;CVE-2024-39697&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-mjw4-jj88-v687&quot;&gt;GHSA-mjw4-jj88-v687&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687&quot;&gt;
              https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-mjw4-jj88-v687
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697&quot;&gt;
              https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-39697
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;8.6 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Changed&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.6&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.3.3&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;phonenumber::parse&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;The phonenumber parsing code may panic due to a reachable &lt;code&gt;assert!&lt;/code&gt; guard on the phonenumber string.&lt;/p&gt;
&lt;p&gt;In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form &lt;code&gt;+dwPAA;phone-context=AA&lt;/code&gt;, where the &amp;quot;number&amp;quot; part potentially parses as a number larger than 2^56.&lt;/p&gt;
&lt;p&gt;Since f69abee1/0.3.4/#52.&lt;/p&gt;
&lt;p&gt;0.2.x series is not affected.&lt;/p&gt;
&lt;h3&gt;Patches&lt;/h3&gt;
&lt;p&gt;Patches have been published as version &lt;code&gt;0.3.6+8.13.36&lt;/code&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0370: proc-macro-error is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0370.html</id><updated>2024-09-05T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0370.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0370: proc-macro-error is unmaintained"/><published>2024-09-05T12:00:00+00:00</published><summary xml:lang="en">proc-macro-error is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/proc-macro-error/RUSTSEC-2024-0370.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/proc-macro-error/RUSTSEC-2024-0370.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0370&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0370
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;proc-macro-error is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-01&quot;&gt;
          September  1, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-05&quot;&gt;
          September  5, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/proc-macro-error.html&quot;&gt;proc-macro-error&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/proc-macro-error&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20&quot;&gt;
              https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;proc-macro-error&apos;s maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.&lt;/p&gt;
&lt;p&gt;proc-macro-error also depends on &lt;code&gt;syn 1.x&lt;/code&gt;, which may be bringing duplicate dependencies into dependant build trees.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/proc-macro-error2&quot;&gt;proc-macro-error2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0368: Vulnerability in olm-sys</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0368.html</id><updated>2024-09-02T12:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0368.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0368: Vulnerability in olm-sys"/><published>2024-09-02T12:00:00+00:00</published><summary xml:lang="en">olm-sys: wrapped library unmaintained, potentially vulnerable</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/olm-sys/RUSTSEC-2024-0368.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/olm-sys/RUSTSEC-2024-0368.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0368&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0368
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;olm-sys: wrapped library unmaintained, potentially vulnerable&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-02&quot;&gt;
          September  2, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-02&quot;&gt;
          September  2, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/olm-sys.html&quot;&gt;olm-sys&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/olm-sys&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://gitlab.gnome.org/BrainBlasted/olm-sys/-/issues/12&quot;&gt;
              https://gitlab.gnome.org/BrainBlasted/olm-sys/-/issues/12
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://matrix.org/blog/2024/08/libolm-deprecation/&quot;&gt;
              https://matrix.org/blog/2024/08/libolm-deprecation/
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45191&quot;&gt;CVE-2024-45191&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45192&quot;&gt;CVE-2024-45192&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45193&quot;&gt;CVE-2024-45193&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;After several cryptographic vulnerabilities in &lt;code&gt;libolm&lt;/code&gt; were disclosed publicly, the Matrix Foundation has &lt;a href=&quot;https://matrix.org/blog/2024/08/libolm-deprecation/&quot;&gt;officially deprecated the library&lt;/a&gt;. &lt;code&gt;olm-sys&lt;/code&gt; is a thin wrapper around &lt;code&gt;libolm&lt;/code&gt; and is now deprecated and potentially vulnerable in kind.&lt;/p&gt;
&lt;p&gt;Users of &lt;code&gt;olm-sys&lt;/code&gt; and its higher-level abstraction, &lt;code&gt;olm-rs&lt;/code&gt;, are highly encouraged to switch to &lt;a href=&quot;https://crates.io/crates/vodozemac&quot;&gt;&lt;code&gt;vodozemac&lt;/code&gt;&lt;/a&gt; as soon as possible. It is the successor effort to &lt;code&gt;libolm&lt;/code&gt; and is written in Rust.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0367: Vulnerability in gix-path</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0367.html</id><updated>2024-09-03T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0367.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0367: Vulnerability in gix-path"/><published>2024-09-01T12:00:00+00:00</published><summary xml:lang="en">gix-path uses local config across repos when it is the highest scope</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/gix-path/RUSTSEC-2024-0367.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/gix-path/RUSTSEC-2024-0367.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0367&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0367
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;gix-path uses local config across repos when it is the highest scope&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-31&quot;&gt;
          August 31, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-09-01&quot;&gt;
          September  1, 2024
        &lt;/time&gt;
        
        &lt;time datetime=&quot;2024-09-03&quot;&gt;
          (last modified: September  3, 2024)
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/gix-path.html&quot;&gt;gix-path&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/gix-path&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/configuration-failure.html&quot;&gt;#configuration-failure&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/information-leak.html&quot;&gt;#information-leak&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-45305&quot;&gt;CVE-2024-45305&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;GHSA-v26r-4c9c-h3j6&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;
              https://github.com/Byron/gitoxide/security/advisories/GHSA-v26r-4c9c-h3j6
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-v26r-4c9c-h3j6&quot;&gt;
              https://github.com/advisories/GHSA-v26r-4c9c-h3j6
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2024-45305&quot;&gt;
              https://nvd.nist.gov/vuln/detail/CVE-2024-45305
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;2.5 &lt;span class=&quot;tag low&quot;&gt;
        LOW
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;Required&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N&quot;&gt;CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;gix_path::env::installation_config_prefix&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gix-path&lt;/code&gt; executes &lt;code&gt;git&lt;/code&gt; to find the path of a configuration file that belongs to the &lt;code&gt;git&lt;/code&gt; installation itself, but mistakenly treats the local repository&apos;s configuration as system-wide if no higher scoped configuration is found. In rare cases, this causes a less trusted repository to be treated as more trusted, or leaks sensitive information from one repository to another, such as sending credentials to another repository&apos;s remote.&lt;/p&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;gix_path::env&lt;/code&gt;, the underlying implementation of the &lt;code&gt;installation_config&lt;/code&gt; and &lt;code&gt;installation_config_prefix&lt;/code&gt; functions calls &lt;code&gt;git config -l --show-origin&lt;/code&gt; and parses the first line of the output to extract the path to the configuration file holding the configuration variable of highest &lt;a href=&quot;https://git-scm.com/docs/git-config#SCOPES&quot;&gt;scope&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L91&quot;&gt;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L91&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L112&quot;&gt;https://github.com/Byron/gitoxide/blob/12251eb052df30105538fa831e641eea557f13d8/gix-path/src/env/git/mod.rs#L112&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While the configuration variable of highest scope is not usually in the local scope, there are practical situations where this occurs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A configuration file truly associated with the installation is not present on all systems and can occasionally be empty. Likewise, there may be no variables in the global scope.&lt;/li&gt;
&lt;li&gt;Configuration files associated with those higher scopes may be deliberately skipped by setting the &lt;code&gt;GIT_CONFIG_SYSTEM&lt;/code&gt; and &lt;code&gt;GIT_CONFIG_GLOBAL&lt;/code&gt; environment variables to &lt;code&gt;/dev/null&lt;/code&gt; (or to &lt;code&gt;NUL&lt;/code&gt; on Windows). This prevents &lt;code&gt;gix-path&lt;/code&gt; from finding the path of configuration files for those scopes, while not preventing downstream components such as the function in &lt;code&gt;gix-config&lt;/code&gt; from reporting a local path as being associated with the installation.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;GIT_CONFIG_NOSYSTEM&lt;/code&gt; environment variable can be used to disable configuration associated with the installation. (&lt;code&gt;GIT_CONFIG_NOSYSTEM=1&lt;/code&gt; is more powerful than &lt;code&gt;GIT_CONFIG_SYSTEM=/dev/null&lt;/code&gt; on systems where an additional &amp;quot;unknown&amp;quot; scope is associated with the installation, as occurs on macOS with Apple Git.) This will cause the local scope to be the highest nonempty scope under even more situations, though in practice it is less dangerous because most, though possibly not all, downstream components would disregard the value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A user may use either or both of the latter two techniques to turn off an undesired configuration or to create a more replicable environment. Such a user would expect that this results in a more controlled configuration.&lt;/p&gt;
&lt;p&gt;Often, when located inside one repository, a user performs operations on that repository or that are not specific to any repository. In such use, local configuration is typically desired or at least acceptable, and mistaking it as coming from another scope is not typically harmful.&lt;/p&gt;
&lt;p&gt;However, sometimes a user is in one repository and operates on another repository. A major case where this occurs is cloning one repository while located in another. This can be done in an ad-hoc fashion, including when cloning the repository outside of the one we are inside. It may also potentially be automated by an application for purposes such as submodule handling. Two kinds of problems are anticipated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A less secure configuration may be set for a specific repository where it is judged acceptable, even though it would not be wanted for other repositories, such as to enable a protocol or set up debugging.&lt;/li&gt;
&lt;li&gt;More likely, a configuration that supplies secrets for use in one repository&apos;s remote can be used to send those secrets to another repository&apos;s remote.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;PoC&lt;/h3&gt;
&lt;p&gt;In this example, we send mock &lt;code&gt;Authorization: Basic ...&lt;/code&gt; credentials meant for one repository&apos;s remote to another remote, by running &lt;code&gt;gix&lt;/code&gt; while inside the first repository to clone the second repository.&lt;/p&gt;
&lt;p&gt;These instructions are written for a Unix shell, but they will work in other shells, including in PowerShell on Windows if the method of setting environment variables is adapted and &lt;code&gt;/dev/null&lt;/code&gt; is replaced with &lt;code&gt;NUL&lt;/code&gt;. This procedure is likely to demonstrate the problem on all systems &lt;em&gt;except&lt;/em&gt; macOS. This is due to the high-scoped &amp;quot;unknown&amp;quot; configuration that usually accompanies Apple Git, and reflects that gix-path is in practice much less vulnerable on macOS (though still potentially vulnerable).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&quot;https://crates.io/crates/dummyhttp&quot;&gt;&lt;code&gt;dummyhttp&lt;/code&gt;&lt;/a&gt; to serve as a local HTTP server for the demonstration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Obtain a build of &lt;code&gt;gitoxide&lt;/code&gt; with the &lt;code&gt;max&lt;/code&gt; feature set enabled. While this vulnerability affects other builds, this example requires &lt;code&gt;max&lt;/code&gt; for &lt;code&gt;http.extraHeader&lt;/code&gt; support.&lt;/p&gt;
&lt;p&gt;Running &lt;code&gt;cargo install gitoxide&lt;/code&gt; will install such a build though it may build against a patched version of &lt;code&gt;gix-path&lt;/code&gt;. Cloning the repository (&lt;a href=&quot;https://github.com/Byron/gitoxide/commit/12251eb052df30105538fa831e641eea557f13d8&quot;&gt;&lt;code&gt;12251eb&lt;/code&gt;&lt;/a&gt; and earlier are affected) and building with &lt;code&gt;cargo build&lt;/code&gt; or &lt;code&gt;cargo install --path .&lt;/code&gt; are also sufficient. In contrast, installing from published binaries with &lt;code&gt;binstall&lt;/code&gt; or &lt;code&gt;quickinstall&lt;/code&gt; does not provide the &lt;code&gt;max&lt;/code&gt; feature, as of this writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run: &lt;code&gt;dummyhttp -i 127.0.0.1 -c 403 -v&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a separate terminal, create a new local repository and set up a mock remote and &lt;code&gt;http.extraHeader&lt;/code&gt; configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git init myrepo
cd myrepo
git remote add origin http://127.0.0.1:8080/mygit.git
git config --local http.extraHeader &apos;Authorization: Basic abcde&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the testing setup is working by running &lt;code&gt;gix fetch&lt;/code&gt; in the repository and checking that it fails in the expected way. In the terminal where that is run, a message should be shown indicating an HTTP 403 error. The more interesting output is in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running, which should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;2024-30-30 03:30:16 127.0.0.1:55689 GET /myrepo.git/info/refs?service=git-upload-pack HTTP/1.1
┌─Incoming request
│ GET /myrepo.git/info/refs?service=git-upload-pack HTTP/1.1
│ Accept: */*
│ Authorization: Basic abcde
│ Git-Protocol: version=2
│ Host: 127.0.0.1:8080
│ User-Agent: git/oxide-0.42.2
┌─Outgoing response
│ HTTP/1.1 403 Forbidden
│ Content-Length: 9
│ Content-Type: text/plain; charset=utf-8
│ Date: Fri, 30 Aug 2024 03:30:16 -0400
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some details may differ, especially dates and times. But &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; should be shown.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, in the terminal where you ran &lt;code&gt;gix fetch&lt;/code&gt;, try cloning a separate repository:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;gix clone http://127.0.0.1:8080/other.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the output appended in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running. This is to observe that &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; was rightly &lt;em&gt;not&lt;/em&gt; sent.&lt;/p&gt;
&lt;p&gt;Alternatively, if it &lt;em&gt;does&lt;/em&gt; appear, then your system may be in one of the uncommon configurations that is vulnerable without further action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now rerun that command, but with a modified environment, to cause &lt;code&gt;gix-path&lt;/code&gt; to wrongly treat configuration from the local scope as being associated with the &lt;code&gt;git&lt;/code&gt; installation:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;env GIT_CONFIG_SYSTEM=/dev/null GIT_CONFIG_GLOBAL=/dev/null gix clone http://127.0.0.1:8080/other.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the output appended in the terminal where &lt;code&gt;dummyhttp&lt;/code&gt; is running. Observe that &lt;code&gt;Authorization: Basic abcde&lt;/code&gt; was wrongly sent.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While this procedure uses the same remote host for both repositories, this is not a required element. If the second repository had a different, untrusted host, the extra header would still be sent.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;It is believed to be very difficult to exploit this vulnerability deliberately, due to the need either to anticipate a situation in which higher-scoped configuration variables would be absent, or to arrange for this to happen. Although any operating system may be affected, users running Apple Git on macOS are much less likely to be affected.&lt;/p&gt;
&lt;p&gt;In the example shown above, more secure general practices would avoid it: using a credential manager, or even using &lt;code&gt;http.&amp;lt;url&amp;gt;.extraHeader&lt;/code&gt; with as specific a &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; as possible, rather than the more general &lt;code&gt;http.extraHeader&lt;/code&gt;. Many scenarios are analogous: if each repository&apos;s configuration is as secure as possible for how the repository is used, and secrets are stored securely and separately, then the circumstances under which an unacceptably unsecure configuration is used, or under which a leak of credentials would occur, become unlikely.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0366: Vulnerability in cosmwasm-vm</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0366.html</id><updated>2024-08-27T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0366.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0366: Vulnerability in cosmwasm-vm"/><published>2024-08-27T12:00:00+00:00</published><summary xml:lang="en">CWA-2023-004: Excessive number of function parameters in compiled Wasm</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmwasm-vm/RUSTSEC-2024-0366.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmwasm-vm/RUSTSEC-2024-0366.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0366&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0366
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;CWA-2023-004: Excessive number of function parameters in compiled Wasm&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-27&quot;&gt;
          August 27, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-27&quot;&gt;
          August 27, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/cosmwasm-vm.html&quot;&gt;cosmwasm-vm&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/cosmwasm-vm&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/resource-consumption.html&quot;&gt;#resource-consumption&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/crash.html&quot;&gt;#crash&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/deadlock.html&quot;&gt;#deadlock&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md&quot;&gt;
              https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.2.8, &amp;lt;1.3.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.3.4, &amp;lt;1.4.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.4.2, &amp;lt;1.5.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.5.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;A specifically crafted Wasm file can cause the VM to consume excessive amounts of memory when compiling a contract.
This can lead to high memory usage, slowdowns, potentially a crash and can poison a lock in the VM,
preventing any further interaction with contracts.&lt;/p&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md&quot;&gt;CWA-2023-004&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0364: Vulnerability in gitoxide-core</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0364.html</id><updated>2024-08-23T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0364.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0364: Vulnerability in gitoxide-core"/><published>2024-08-23T12:00:00+00:00</published><summary xml:lang="en">gitoxide-core does not neutralize special characters for terminals</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/gitoxide-core/RUSTSEC-2024-0364.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/gitoxide-core/RUSTSEC-2024-0364.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0364&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0364
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;gitoxide-core does not neutralize special characters for terminals&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-22&quot;&gt;
          August 22, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-23&quot;&gt;
          August 23, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/gitoxide-core.html&quot;&gt;gitoxide-core&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/gitoxide-core&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/terminal.html&quot;&gt;#terminal&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/control-characters.html&quot;&gt;#control-characters&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/escape-sequences.html&quot;&gt;#escape-sequences&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-43785&quot;&gt;CVE-2024-43785&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-88g2-r9rw-g55h&quot;&gt;GHSA-88g2-r9rw-g55h&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h&quot;&gt;
              https://github.com/Byron/gitoxide/security/advisories/GHSA-88g2-r9rw-g55h
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-88g2-r9rw-g55h&quot;&gt;
              https://github.com/advisories/GHSA-88g2-r9rw-g55h
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2024-43785&quot;&gt;
              https://nvd.nist.gov/vuln/detail/CVE-2024-43785
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Byron/gitoxide/issues/1534&quot;&gt;
              https://github.com/Byron/gitoxide/issues/1534
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;2.5 &lt;span class=&quot;tag low&quot;&gt;
        LOW
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;Required&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N&quot;&gt;CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;gix&lt;/code&gt; and &lt;code&gt;ein&lt;/code&gt; commands write pathnames and other metadata literally to terminals, even if they contain characters terminals treat specially, including ANSI escape sequences. This sometimes allows an untrusted repository to misrepresent its contents and to alter or concoct error messages.&lt;/p&gt;
&lt;h3&gt;Details&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gitoxide-core&lt;/code&gt;, which provides most underlying functionality of the &lt;code&gt;gix&lt;/code&gt; and &lt;code&gt;ein&lt;/code&gt; commands, does not neutralize newlines, backspaces, or control characters—including those that form ANSI escape sequences—that appear in a repository&apos;s paths, author and committer names, commit messages, or other metadata. Such text may be written as part of the output of a command, as well as appearing in error messages when an operation fails.&lt;/p&gt;
&lt;p&gt;ANSI escape sequences are of particular concern because, when printed to a terminal, they can change colors, including to render subsequent text unreadable; reposition the cursor to write text in a different location, including where text has already been written; clear the terminal; set the terminal title-bar text to arbitrary values; render the terminal temporarily unusable; and other such operations.&lt;/p&gt;
&lt;p&gt;The effect is mostly an annoyance. But the author of a malicious repository who can predict how information from the repository may be accessed can cause files in the repository to be concealed or otherwise misrepresented, as well as rewrite all or part of error messages, or mimic error messages convincingly by repositioning the cursor and writing colored text.&lt;/p&gt;
&lt;h3&gt;PoC&lt;/h3&gt;
&lt;p&gt;On a Unix-like system in a POSIX-compatible shell, run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git init misleading-path
cd misleading-path
touch &amp;quot;$(printf &apos;\033]0;Boo!\007\033[2K\r\033[91mError: Repository is corrupted. Run \033[96mEVIL_COMMAND\033[91m to attempt recovery.\033[0m&apos;)&amp;quot;
git add .
git commit -m &apos;Initial commit&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the repository—or, if desired, in a clone of it, to show that this is exploitable by getting a user to clone an untrusted repository—run this command, which outputs entries in a three-column form showing type, hash, and filename:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;gix tree entries
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although the output is of that form, it does not appear to be. Instead, the output in a terminal looks like this, colorized to appear to be an error message, with &lt;code&gt;EVIL_COMMAND&lt;/code&gt; in another color, and with no other text:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Error: Repository is corrupted. Run EVIL_COMMAND to attempt recovery.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In some terminals, a beep or other sound will be made. In most terminals, the title bar text will be changed to &lt;code&gt;Boo!&lt;/code&gt;, though in some shells this may be immediately undone when printing the prompt. These elements are included to showcase the abilities of ANSI escape sequences, but they are not usually themselves threats.&lt;/p&gt;
&lt;p&gt;To see what is actually produced, &lt;code&gt;gix tree entries&lt;/code&gt; can be piped to a command that displays special characters symbolically, such as &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;cat -v&lt;/code&gt; if available.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;BLOB e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 ESC]0;Boo!^GESC[2K^MESC[91mError: Repository is corrupted. Run ESC[96mEVIL_COMMANDESC[91m to attempt recovery.ESC[0m
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That shows the effect on &lt;code&gt;gix tree entries&lt;/code&gt;, but various other commands are also affected, and the escape sequences and other special characters can also appear in non-path metadata, such as in the &lt;code&gt;user.name&lt;/code&gt; used to create a commit.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;For users who do not clone or operate in clones of untrusted repositories, there is no impact.&lt;/p&gt;
&lt;p&gt;Windows is much less affected than Unix-like systems due to limitations on what characters can appear in filenames, and because traditionally Windows terminals do not support as many ANSI escape sequences.&lt;/p&gt;
&lt;p&gt;Because different &lt;code&gt;gix&lt;/code&gt; and &lt;code&gt;ein&lt;/code&gt; commands display different data in different formats, the author of a malicious repository must guess how it will be used, which complicates crafting truly convincing output, though it may be possible to craft a repository where &lt;code&gt;gix clone&lt;/code&gt; fails to clone it but produces a misleading message.&lt;/p&gt;
&lt;p&gt;Although this is mainly exploitable on systems &lt;em&gt;other&lt;/em&gt; than Windows, in the ability to produce misleading output this superficially resembles &lt;a href=&quot;https://github.com/advisories/GHSA-49jc-r788-3fc9&quot;&gt;CVE-2024-35197&lt;/a&gt;. But this is much more limited, because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The misleading output can only be made to go where the application is already sending output. Redirection is not defeated, and devices to access cannot be chosen by the attacker.&lt;/li&gt;
&lt;li&gt;The misleading output can only be take place &lt;em&gt;when&lt;/em&gt; the application is already producing output. This limitation complicates the production of believable messages.&lt;/li&gt;
&lt;li&gt;Only terminals are affected. Even if a standard stream is redirected to another file or device, these special characters would not have a special effect, unless echoed later without sanitization.&lt;/li&gt;
&lt;li&gt;Reading and blocking cannot be performed.&lt;/li&gt;
&lt;li&gt;Applications other than the gitoxide &lt;code&gt;gix&lt;/code&gt; and &lt;code&gt;ein&lt;/code&gt; executables are unaffected. The exception is if another application uses &lt;code&gt;gitoxide-core&lt;/code&gt;. But this is explicitly discouraged in the &lt;code&gt;gitoxide-core&lt;/code&gt; documentation and is believed to be rare.&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0365: Vulnerability in diesel</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0365.html</id><updated>2024-08-23T12:00:00+00:00</updated><category term="format-injection"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0365.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0365: Vulnerability in diesel"/><published>2024-08-23T12:00:00+00:00</published><summary xml:lang="en">Binary Protocol Misinterpretation caused by Truncating or Overflowing Casts</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/diesel/RUSTSEC-2024-0365.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/diesel/RUSTSEC-2024-0365.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0365&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0365
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Binary Protocol Misinterpretation caused by Truncating or Overflowing Casts&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-23&quot;&gt;
          August 23, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-23&quot;&gt;
          August 23, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/diesel.html&quot;&gt;diesel&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/diesel&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/format-injection.html&quot;&gt;format-injection&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/sql.html&quot;&gt;#sql&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/injection.html&quot;&gt;#injection&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/overflow.html&quot;&gt;#overflow&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/truncation.html&quot;&gt;#truncation&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/diesel-rs/diesel/pull/4170&quot;&gt;
              https://github.com/diesel-rs/diesel/pull/4170
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=2.2.3&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The following presentation at this year&apos;s DEF CON was brought to our attention on the Diesel Gitter Channel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL Injection isn&apos;t Dead: Smuggling Queries at the Protocol Level&lt;br /&gt;
&lt;a href=&quot;http://web.archive.org/web/20240812130923/https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn&amp;#x27;t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf&quot;&gt;http://web.archive.org/web/20240812130923/https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn&apos;t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf&lt;/a&gt;&lt;br /&gt;
(Archive link for posterity.)
Essentially, encoding a value larger than 4GiB can cause the length prefix in the protocol to overflow,
causing the server to interpret the rest of the string as binary protocol commands or other data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It appears Diesel &lt;em&gt;does&lt;/em&gt; perform truncating casts in a way that could be problematic,
for example: &lt;a href=&quot;https://github.com/diesel-rs/diesel/blob/ae82c4a5a133db65612b7436356f549bfecda1c7/diesel/src/pg/connection/stmt/mod.rs#L36&quot;&gt;https://github.com/diesel-rs/diesel/blob/ae82c4a5a133db65612b7436356f549bfecda1c7/diesel/src/pg/connection/stmt/mod.rs#L36&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This code has existed essentially since the beginning,
so it is reasonable to assume that all published versions &lt;code&gt;&amp;lt;= 2.2.2&lt;/code&gt; are affected.&lt;/p&gt;
&lt;h2&gt;Mitigation&lt;/h2&gt;
&lt;p&gt;The prefered migration to the outlined problem is to update to a Diesel version newer than 2.2.2, which includes
fixes for the problem.&lt;/p&gt;
&lt;p&gt;As always, you should make sure your application is validating untrustworthy user input.
Reject any input over 4 GiB, or any input that could &lt;em&gt;encode&lt;/em&gt; to a string longer than 4 GiB.
Dynamically built queries are also potentially problematic if it pushes the message size over this 4 GiB bound.&lt;/p&gt;
&lt;p&gt;For web application backends, consider adding some middleware that limits the size of request bodies by default.&lt;/p&gt;
&lt;h2&gt;Resolution&lt;/h2&gt;
&lt;p&gt;Diesel now uses &lt;code&gt;#[deny]&lt;/code&gt; directives for the following Clippy lints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/#/cast_possible_truncation&quot;&gt;&lt;code&gt;cast_possible_truncation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/#/cast_possible_wrap&quot;&gt;&lt;code&gt;cast_possible_wrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rust-lang.github.io/rust-clippy/master/#/cast_sign_loss&quot;&gt;&lt;code&gt;cast_sign_loss&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to prevent casts that will lead to precision loss or other trunctations. Additionally we performed an
audit of the relevant code.&lt;/p&gt;
&lt;p&gt;A fix is included in the &lt;code&gt;2.2.3&lt;/code&gt; release.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0363: Vulnerability in sqlx</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0363.html</id><updated>2024-08-24T12:00:00+00:00</updated><category term="format-injection"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0363.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0363: Vulnerability in sqlx"/><published>2024-08-16T12:00:00+00:00</published><summary xml:lang="en">Binary Protocol Misinterpretation caused by Truncating or Overflowing Casts</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/sqlx/RUSTSEC-2024-0363.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/sqlx/RUSTSEC-2024-0363.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0363&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0363
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Binary Protocol Misinterpretation caused by Truncating or Overflowing Casts&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-15&quot;&gt;
          August 15, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-16&quot;&gt;
          August 16, 2024
        &lt;/time&gt;
        
        &lt;time datetime=&quot;2024-08-24&quot;&gt;
          (last modified: August 24, 2024)
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/sqlx.html&quot;&gt;sqlx&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/sqlx&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/format-injection.html&quot;&gt;format-injection&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/sql.html&quot;&gt;#sql&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/injection.html&quot;&gt;#injection&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/overflow.html&quot;&gt;#overflow&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/truncation.html&quot;&gt;#truncation&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/launchbadge/sqlx/issues/3440&quot;&gt;
              https://github.com/launchbadge/sqlx/issues/3440
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The following presentation at this year&apos;s DEF CON was brought to our attention on the SQLx Discord:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL Injection isn&apos;t Dead: Smuggling Queries at the Protocol Level&lt;br /&gt;
&lt;a href=&quot;http://web.archive.org/web/20240812130923/https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn&amp;#x27;t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf&quot;&gt;http://web.archive.org/web/20240812130923/https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn&apos;t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf&lt;/a&gt;&lt;br /&gt;
(Archive link for posterity.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Essentially, encoding a value larger than 4GiB can cause the length prefix in the protocol to overflow,
causing the server to interpret the rest of the string as binary protocol commands or other data.&lt;/p&gt;
&lt;p&gt;It appears SQLx &lt;em&gt;does&lt;/em&gt; perform truncating casts in a way that could be problematic,
for example: &lt;a href=&quot;https://github.com/launchbadge/sqlx/blob/6f2905695b9606b5f51b40ce10af63ac9e696bb8/sqlx-postgres/src/arguments.rs#L163&quot;&gt;https://github.com/launchbadge/sqlx/blob/6f2905695b9606b5f51b40ce10af63ac9e696bb8/sqlx-postgres/src/arguments.rs#L163&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This code has existed essentially since the beginning,
so it is reasonable to assume that all published versions &lt;code&gt;&amp;lt;= 0.8.0&lt;/code&gt; are affected.&lt;/p&gt;
&lt;h2&gt;Mitigation&lt;/h2&gt;
&lt;p&gt;As always, you should make sure your application is validating untrustworthy user input.
Reject any input over 4 GiB, or any input that could &lt;em&gt;encode&lt;/em&gt; to a string longer than 4 GiB.
Dynamically built queries are also potentially problematic if it pushes the message size over this 4 GiB bound.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/sqlx/latest/sqlx/trait.Encode.html#method.size_hint&quot;&gt;&lt;code&gt;Encode::size_hint()&lt;/code&gt;&lt;/a&gt;
can be used for sanity checks, but do not assume that the size returned is accurate.
For example, the &lt;code&gt;Json&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;Text&amp;lt;T&amp;gt;&lt;/code&gt; adapters have no reasonable way to predict or estimate the final encoded size,
so they just return &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;For web application backends, consider adding some middleware that limits the size of request bodies by default.&lt;/p&gt;
&lt;h2&gt;Resolution&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sqlx 0.8.1&lt;/code&gt; has been released with the fix: &lt;a href=&quot;https://github.com/launchbadge/sqlx/blob/main/CHANGELOG.md#081---2024-08-23&quot;&gt;https://github.com/launchbadge/sqlx/blob/main/CHANGELOG.md#081---2024-08-23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Postgres users are advised to upgrade ASAP as a possible exploit has been demonstrated:
&lt;a href=&quot;https://github.com/launchbadge/sqlx/issues/3440#issuecomment-2307956901&quot;&gt;https://github.com/launchbadge/sqlx/issues/3440#issuecomment-2307956901&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySQL and SQLite do not &lt;em&gt;appear&lt;/em&gt; to be exploitable, but upgrading is recommended nonetheless.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0362: Vulnerability in alloy-json-abi</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0362.html</id><updated>2024-08-15T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0362.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0362: Vulnerability in alloy-json-abi"/><published>2024-08-15T12:00:00+00:00</published><summary xml:lang="en">Stack overflow when parsing specially crafted JSON ABI strings</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/alloy-json-abi/RUSTSEC-2024-0362.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/alloy-json-abi/RUSTSEC-2024-0362.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0362&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0362
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Stack overflow when parsing specially crafted JSON ABI strings&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-07-30&quot;&gt;
          July 30, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-15&quot;&gt;
          August 15, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/alloy-json-abi.html&quot;&gt;alloy-json-abi&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/alloy-json-abi&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/stack-overflow.html&quot;&gt;#stack-overflow&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/alloy-rs/core/issues/702&quot;&gt;
              https://github.com/alloy-rs/core/issues/702
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.7&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected versions of the &lt;code&gt;alloy-json-abi&lt;/code&gt; crate did not properly handle parsing of malformatted JSON ABI strings. The &lt;code&gt;JsonAbi::parse&lt;/code&gt; method can be tricked into a stack overflow when processing specially crafted input.&lt;/p&gt;
&lt;p&gt;This stack overflow can lead to a crash of the application using this crate, potentially causing a denial of service.&lt;/p&gt;
&lt;p&gt;The flaw was corrected in commit 4790c47.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0361: Vulnerability in cosmwasm-vm</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0361.html</id><updated>2024-08-08T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0361.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0361: Vulnerability in cosmwasm-vm"/><published>2024-08-08T12:00:00+00:00</published><summary xml:lang="en">CWA-2024-004: Gas mispricing in cosmwasm-vm</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmwasm-vm/RUSTSEC-2024-0361.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmwasm-vm/RUSTSEC-2024-0361.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0361&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0361
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;CWA-2024-004: Gas mispricing in cosmwasm-vm&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-08&quot;&gt;
          August  8, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-08-08&quot;&gt;
          August  8, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/cosmwasm-vm.html&quot;&gt;cosmwasm-vm&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/cosmwasm-vm&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/resource-consumption.html&quot;&gt;#resource-consumption&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-rg2q-2jh9-447q&quot;&gt;GHSA-rg2q-2jh9-447q&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-004.md&quot;&gt;
              https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-004.md
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.5.7, &amp;lt;2.0.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=2.0.6, &amp;lt;2.1.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=2.1.3&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Some Wasm operations take significantly more gas than our benchmarks indicated. This can lead to missing the gas target we defined by a factor of ~10x. This means a malicious contract could take 10 times as much time to execute as expected, which can be used to temporarily DoS a chain.&lt;/p&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-004.md&quot;&gt;CWA-2024-004&lt;/a&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>